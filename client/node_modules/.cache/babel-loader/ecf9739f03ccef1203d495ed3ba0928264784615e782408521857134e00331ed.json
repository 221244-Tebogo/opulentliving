{"ast":null,"code":"var _jsxFileName = \"/Users/tebogoramolobeng/Documents/opulentliving/client/src/components/AddProductForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddProductForm = () => {\n  _s();\n  const [productData, setProductData] = useState({\n    name: '',\n    image: '',\n    countInStock: 0\n  });\n  const [products, setProducts] = useState([]);\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  useEffect(() => {\n    // Fetch products from the server when the component mounts\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/product/');\n      setProducts(response.data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProductData({\n      ...productData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (selectedProductId) {\n        // Update the existing product\n        const response = await axios.put(`http://localhost:3000/api/product/${selectedProductId}`, productData);\n        console.log('Product updated:', response.data);\n      } else {\n        // Create a new product\n        const response = await axios.post('http://localhost:3000/admin/products/add', productData);\n        console.log('Product created:', response.data);\n      }\n      // Reset the form\n      setProductData({\n        name: '',\n        image: '',\n        countInStock: 0\n      });\n      setSelectedProductId(null);\n      // Fetch the updated list of products\n      fetchProducts();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleEdit = productId => {\n    // Find the product to edit\n    const productToEdit = products.find(product => product._id === productId);\n    if (productToEdit) {\n      // Set the form data and selected product ID for editing\n      setProductData({\n        name: productToEdit.name,\n        image: productToEdit.image,\n        countInStock: productToEdit.countInStock\n      });\n      setSelectedProductId(productId);\n    }\n  };\n  const handleDelete = async productId => {\n    try {\n      // Delete the product\n      const response = await axios.delete(`http://localhost:3000/api/product/${productId}`);\n      console.log('Product deleted:', response.data);\n      // Fetch the updated list of products\n      fetchProducts();\n    } catch (error) {\n      console.error('Error deleting product:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add or Update a Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: productData.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"image\",\n          value: productData.image,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Count in Stock:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"countInStock\",\n          value: productData.countInStock,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: selectedProductId ? 'Update Product' : 'Add Product'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" -\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(product._id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(product._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(AddProductForm, \"uFe6vDt1TzcAKkhDb8EM0tqzspQ=\");\n_c = AddProductForm;\nexport default AddProductForm;\nvar _c;\n$RefreshReg$(_c, \"AddProductForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AddProductForm","_s","productData","setProductData","name","image","countInStock","products","setProducts","selectedProductId","setSelectedProductId","fetchProducts","response","get","data","error","console","handleInputChange","e","value","target","handleSubmit","preventDefault","put","log","post","handleEdit","productId","productToEdit","find","product","_id","handleDelete","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","map","onClick","_c","$RefreshReg$"],"sources":["/Users/tebogoramolobeng/Documents/opulentliving/client/src/components/AddProductForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AddProductForm = () => {\n  const [productData, setProductData] = useState({\n    name: '',\n    image: '',\n    countInStock: 0,\n  });\n  const [products, setProducts] = useState([]);\n  const [selectedProductId, setSelectedProductId] = useState(null);\n\n  useEffect(() => {\n    // Fetch products from the server when the component mounts\n    fetchProducts();\n  }, []);\n\n  const fetchProducts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/product/');\n      setProducts(response.data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProductData({\n      ...productData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      if (selectedProductId) {\n        // Update the existing product\n        const response = await axios.put(\n          `http://localhost:3000/api/product/${selectedProductId}`,\n          productData\n        );\n        console.log('Product updated:', response.data);\n      } else {\n        // Create a new product\n        const response = await axios.post('http://localhost:3000/admin/products/add', productData);\n        console.log('Product created:', response.data);\n      }\n      // Reset the form\n      setProductData({\n        name: '',\n        image: '',\n        countInStock: 0,\n      });\n      setSelectedProductId(null);\n      // Fetch the updated list of products\n      fetchProducts();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleEdit = (productId) => {\n    // Find the product to edit\n    const productToEdit = products.find((product) => product._id === productId);\n    if (productToEdit) {\n      // Set the form data and selected product ID for editing\n      setProductData({\n        name: productToEdit.name,\n        image: productToEdit.image,\n        countInStock: productToEdit.countInStock,\n      });\n      setSelectedProductId(productId);\n    }\n  };\n\n  const handleDelete = async (productId) => {\n    try {\n      // Delete the product\n      const response = await axios.delete(`http://localhost:3000/api/product/${productId}`);\n      console.log('Product deleted:', response.data);\n      // Fetch the updated list of products\n      fetchProducts();\n    } catch (error) {\n      console.error('Error deleting product:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add or Update a Product</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={productData.name}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label>Image URL:</label>\n          <input\n            type=\"text\"\n            name=\"image\"\n            value={productData.image}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label>Count in Stock:</label>\n          <input\n            type=\"number\"\n            name=\"countInStock\"\n            value={productData.countInStock}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"submit\">{selectedProductId ? 'Update Product' : 'Add Product'}</button>\n      </form>\n\n      <h2>Product List</h2>\n      <ul>\n        {products.map((product) => (\n          <li key={product._id}>\n            {product.name} -{' '}\n            <button onClick={() => handleEdit(product._id)}>Edit</button>{' '}\n            <button onClick={() => handleDelete(product._id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AddProductForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}